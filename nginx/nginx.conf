# HTTP: serve o ACME challenge e redireciona para HTTPS
server {
    listen 80;
    server_name api.tanquecheio.site;

    # Let's Encrypt (webroot)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redireciona o restante para HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS: proxy para a API
server {
    listen 443 ssl http2;
    server_name api.tanquecheio.site;

    ssl_certificate     /etc/letsencrypt/live/api.tanquecheio.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.tanquecheio.site/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # aumente se fizer upload de arquivos grandes
    client_max_body_size 50m;

    location / {

	if ($request_method = 'OPTIONS') {
            # Adiciona os cabeçalhos que o browser precisa para aprovar a requisição
            add_header 'Access-Control-Allow-Origin' 'https://colibri-client.vercel.app';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Cache-Control, X-Requested-With';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' 0;
            # Responde com sucesso e sem conteúdo, terminando o ciclo aqui
            return 204;
        }
        proxy_pass         http://api:3000;
        proxy_http_version 1.1;

        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_read_timeout 300;
    }
}
