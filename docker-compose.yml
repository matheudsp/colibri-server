services:
  # --- Proxy Reverso ---
  traefik:
    image: traefik:v2.11
    container_name: colibri_traefik
    restart: always
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      # - './traefik/traefik.yml:/etc/traefik/traefik.yml'
      - './traefik/acme.json:/letsencrypt/acme.json'
    depends_on:
      - api
    networks:
      - web

  api:
    build: .
    container_name: colibri_api
    restart: always
    env_file: .env
    ports:
      - '${PORT:-3000}:3000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${TRAEFIK_DOMAIN}`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls.certresolver=letsencrypt'
      - 'traefik.http.services.api.loadbalancer.server.port=3000'
      - 'traefik.docker.network=web'
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    depends_on:
      - db
      - redis
    networks:
      - web

  db:
    image: postgres:16-alpine
    container_name: colibri_db
    restart: always
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web

  redis:
    image: redis:7-alpine
    container_name: colibri_redis
    restart: always
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    volumes:
      - redis_data:/data

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: colibri_uptime_kuma
    restart: always
    ports:
      - '3001:3001'
    volumes:
      - uptime_kuma_data:/app/data
    labels: # Labels para o Traefik descobrir e rotear o tr√°fego para o Uptime Kuma
      - 'traefik.enable=true'
      - 'traefik.http.routers.uptime-kuma.rule=Host(`${UPTIME_KUMA_DOMAIN}`)'
      - 'traefik.http.routers.uptime-kuma.entrypoints=websecure'
      - 'traefik.http.services.uptime-kuma.loadbalancer.server.port=3001'
      - 'traefik.http.routers.uptime-kuma.tls.certresolver=letsencrypt'
    networks:
      - web

volumes:
  postgres_data:
  redis_data:
  uptime_kuma_data:

networks:
  web:
    driver: bridge
